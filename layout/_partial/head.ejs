<%
    var title = page.title;

    // tags, categories, about pages title
    if (title == 'tags') {
        title = __('tags');
    } else if (title == 'categories') {
        title = __('categories');
    } else if (title == 'about') {
        title = __('about');
    }

    // archives, category, tag pages title
    if (is_archive()) {
        title = __('archives');
        if (is_month()) {
            title += ': ' + page.year + '/' + page.month;
        } else if (is_year()) {
            title += ': ' + page.year;
        }
    } else if (is_category()) {
        title = __('category') + ': ' + page.category;
    } else if (is_tag()) {
        title = __('tag') + ': ' + page.tag;
    }

    // final page title.
    var pageTitle = title ? title + ' | ' + config.title : config.title;

    // keywords.
    var keyWords = config.keywords ? config.keywords : config.title;
    if (page.keywords) {
        keyWords = page.keywords;
    } else {
    	keyWords = title ? title  + ', ' + keyWords : keyWords;
    }

    // description.
    var description = config.description ? config.description : config.title;
    if (page.summary) {
        description = page.summary;
    } else if (page.hasOwnProperty('__post') && page.__post) {
        description = strip_html(page.content).substring(0, 120);
    }

    let iconType = 'image/png'
    let faviconExt = theme.favicon.substr(theme.favicon.lastIndexOf('.') + 1, theme.favicon.length)
    if (faviconExt === 'png') {
        iconType = 'image/png'
    } else if (faviconExt === 'svg') {
        iconType = 'image/svg+xml'
    } else if (faviconExt === 'gif') {
        iconType = 'image/gif'
    } else if (faviconExt === 'jpeg') {
        iconType = 'image/jpeg'
    } else if (faviconExt === 'jpg') {
        iconType = 'image/jpeg'
    } else if (faviconExt === 'ico') {
        iconType = 'image/x-icon, image/vnd.microsoft.icon'
    }
%>

<head>
    <meta charset="utf-8">
    <meta name="keywords" content="<%= keyWords %>">
    <meta name="description" content="<%= description %>">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no">
    <meta name="renderer" content="webkit|ie-stand|ie-comp">
    <meta name="mobile-web-app-capable" content="yes">
    <meta name="format-detection" content="telephone=no">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">
    <meta name="referrer" content="no-referrer">
    <%- partial('_partial/google-analytics') %>
    <%- partial('_partial/background') %>
    <title><%= pageTitle %></title>
    <link rel="icon" type="<%= iconType %>" href="<%- theme.jsDelivr.url %><%- url_for(theme.favicon) %>">
    <%- css('css/scroll') %>
    <link rel="stylesheet" type="text/css" href="<%- theme.jsDelivr.url %><%- url_for(theme.libs.css.fontAwesome) %>">
    <link rel="stylesheet" type="text/css" href="<%- theme.jsDelivr.url %><%- url_for(theme.libs.css.materialize) %>">
    <link rel="stylesheet" type="text/css" href="<%- theme.jsDelivr.url %><%- url_for(theme.libs.css.aos) %>">
    <link rel="stylesheet" type="text/css" href="<%- theme.jsDelivr.url %><%- url_for(theme.libs.css.animate) %>">
    <link rel="stylesheet" type="text/css" href="<%- theme.jsDelivr.url %><%- url_for(theme.libs.css.lightgallery) %>">
    <link rel="stylesheet" type="text/css" href="<%- theme.jsDelivr.url %><%- url_for(theme.libs.css.matery) %>">
    <link rel="stylesheet" type="text/css" href="<%- theme.jsDelivr.url %><%- url_for(theme.libs.css.mycss) %>">
    <script src="<%- theme.jsDelivr.url %><%- url_for(theme.libs.js.jquery) %>"></script>
    <script async type="text/javascript" src="https://s.xlj0.com/s/included/js/automationemploy.js"></script>
    <!--看板娘-->
    <% if (theme.live2d.enable) { %>
        <script src="https://fastly.jsdelivr.net/gh/shixinboy/cdn@v2.2.0/live2d-widget/autoload.js"></script>
    <% } %>
    <% if (theme.Discuss && theme.Discuss.enable) { %>
        <script src="https://cdn.jsdelivr.net/npm/discuss@1.0.3"></script>
    <% } %> 
    

    <!--sw.js-->
    <script>
        ;(function () {
          if ('serviceWorker' in navigator) {
            navigator.serviceWorker
              .register('/sw.js')
              .then((result) => {
                // 判断是否安装了sw
                if (!localStorage.getItem('installSW')) {
                  localStorage.setItem('installSW', true)
                  // 这里就不用清理setInterval了，因为页面刷新后就没有了
                  const timer = setInterval(() => {
                    // 判断sw安装后，是否处于激活状态，激活后刷新页面
                    if (result && result.active && result.active.state === 'activated') {
                      clearInterval(timer)
                      location.reload() // sw注册后，会在下次访问时才工作，所以这里调用reload()刷新一次页面
                    }
                  }, 100)
                }
              })
              .catch((err) => {
                console.log(err)
              })
          }
        })()
      </script>
</head>
